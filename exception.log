{"level":"error","message":"\nInvalid `prismaClient.contact.findFirst()` invocation in\nD:\\belajar-nodejs-restfull\\src\\service\\contact-service.js:28:48\n\n  25 const get = async (user, contactId) => {\n  26     contactId = validate(getContactValidation, contactId)\n  27 \n→ 28     const contact = await prismaClient.contact.findFirst({\n           where: {\n             username: \"test\",\n             id: \"[object Object]1\"\n                 ~~~~~~~~~~~~~~~~~~\n           },\n           select: {\n             id: true,\n             first_name: true,\n             last_name: true,\n             email: true,\n             phone: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","target":"contact.findFirst","timestamp":"2023-09-11T12:00:12.499Z"}
{"level":"error","message":"\nInvalid `prismaClient.contact.findFirst()` invocation in\nD:\\belajar-nodejs-restfull\\src\\service\\contact-service.js:28:48\n\n  25 const get = async (user, contactId) => {\n  26     contactId = validate(getContactValidation, contactId)\n  27 \n→ 28     const contact = await prismaClient.contact.findFirst({\n           where: {\n             username: \"test\",\n             id: \"[object Object]1\"\n                 ~~~~~~~~~~~~~~~~~~\n           },\n           select: {\n             id: true,\n             first_name: true,\n             last_name: true,\n             email: true,\n             phone: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","target":"contact.findFirst","timestamp":"2023-09-11T12:05:53.974Z"}
{"level":"error","message":"\nInvalid `prismaClient.user.deleteMany()` invocation in\nD:\\belajar-nodejs-restfull\\test\\test-util.js:6:29\n\n  3 \n  4 \n  5 export const removeTestUser = async() => {\n→ 6     await prismaClient.user.deleteMany(\nForeign key constraint failed on the field: `username`","target":"user.deleteMany","timestamp":"2023-09-11T12:06:12.802Z"}
{"level":"error","message":"\nInvalid `prismaClient.user.create()` invocation in\nD:\\belajar-nodejs-restfull\\test\\test-util.js:14:35\n\n  11 }\n  12 \n  13 export const createTestUser = async() => {\n→ 14     await prismaClient.user.create(\nUnique constraint failed on the constraint: `PRIMARY`","target":"user.create","timestamp":"2023-09-11T12:06:14.043Z"}
{"level":"error","message":"\nInvalid `prismaClient.contact.findFirst()` invocation in\nD:\\belajar-nodejs-restfull\\src\\service\\contact-service.js:28:48\n\n  25 const get = async (user, contactId) => {\n  26     contactId = validate(getContactValidation, contactId)\n  27 \n→ 28     const contact = await prismaClient.contact.findFirst({\n           where: {\n             username: \"test\",\n             id: \"[object Object]1\"\n                 ~~~~~~~~~~~~~~~~~~\n           },\n           select: {\n             id: true,\n             first_name: true,\n             last_name: true,\n             email: true,\n             phone: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","target":"contact.findFirst","timestamp":"2023-09-11T12:14:05.004Z"}
